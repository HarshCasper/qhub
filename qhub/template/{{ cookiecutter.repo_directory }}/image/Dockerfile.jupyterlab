ARG BASE_IMAGE=quansight/qhub-ubuntu-base:v0.3.13
FROM ${BASE_IMAGE}

ARG DISTRO=ubuntu

LABEL org.opencontainers.image.authors="Quansight" \
      org.opencontainers.image.source="https://github.com/Quansight/qhub"

ENV TZ=America/Chicago
RUN chmod -R a-w ~ && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# These can but should not be changed. ids will be arbitrary at run time.
ARG NB_USER=jovyan
ARG NB_UID=1000
ARG NB_GID=100

COPY jupyterlab /opt/jupyterlab

RUN if [[ "$DISTRO" == "ubuntu" ]] \
    ; then \
    echo "Install extra apt packages"  && \
    apt-get update && \
    apt-get install -y --no-install-recommends $(cat /opt/jupyterlab/apt.txt | grep -vE "^\s*#" $1  | tr "\n" " ") && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    ; else \
    echo "Install extra yum packages" && \
    yum update -y && \
    yum install -y $(cat /opt/jupyterlab/yum.txt | grep -vE "^\s*#" $1  | tr "\n" " ") && \
    yum clean all && \
    rm -rf /tmp/* /var/tmp/* /var/cache/yum \
    ; fi

# ========== Install JupyterLab ==========
ARG SKIP_CONDA_SOLVE=no
COPY scripts/install-conda-environment.sh /opt/scripts/install-conda-environment.sh
RUN \
    if [ "${SKIP_CONDA_SOLVE}" != "no" ];then  \
        ENV_FILE=/opt/jupyterlab/conda-linux-64.lock ; \
    else  \
        ENV_FILE=/opt/jupyterlab/environment.yaml ; \
    fi ; \
    /opt/scripts/install-conda-environment.sh "${ENV_FILE}" 'true'

RUN /opt/jupyterlab/postBuild

# ========== Setup GPU Paths ============
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib64
ENV NVIDIA_PATH=/usr/local/nvidia/bin
ENV PATH="$NVIDIA_PATH:$PATH"

# ========== users configuration ============
# Establish some default shell behaviors for all users. This writes to /etc so
# that the shell setup will always be used by users
COPY scripts/setup_shell_behavior.sh /opt/scripts/setup_shell_behavior.sh
RUN setup_shell_behavior.sh ${DEFAULT_ENV} \
    && fix-permissions /etc

# ========== change user though this will change upon deployment...  ============
# Create user & group jovyan, this is only relevant for
# local testing where the user has not mounted their
# own home directory to the container. During
# deployment this is mounted over and so an equivalent
# should be executed upon user initialization.
RUN groupadd --gid ${NB_UID} ${NB_USER} && \
    useradd \
    --comment 'Jupyter container user' \
    --create-home \
    --no-log-init \
    --shell /bin/bash \
    --gid ${NB_UID} \
    --uid ${NB_UID} \
    ${NB_USER}

# Have jovyan user own /home/jovyan/.local for local testing.
RUN chown jovyan /home/jovyan

USER ${NB_UID}
WORKDIR /home/${NB_USER}
